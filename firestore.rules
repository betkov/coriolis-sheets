rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /characters/{charId} {
      allow read: if true;
      allow create: if userOwnsRequest() && hasName();
      allow update: if userOwnsDocumentAndRequest() && hasName();
      allow delete: if userOwnsDocument();
    }
    match /ships/{shipId} {
      allow read: if true;
      allow create: if userOwnsRequest() && hasName();
      allow update: if userOwnsDocumentAndRequest() && hasName();
      allow delete: if userOwnsDocument();
    }
    match /parties/{partyId} {
      allow read: if true;
      allow create: if userOwnsRequest() && hasName();
      allow update: if userOwnsDocumentAndRequest() && hasName();
      allow delete: if userOwnsDocument();
    }

    function userOwnsRequest() {
      return request.auth != null && request.auth.uid == request.resource.data.owner;
    }
    function userOwnsDocument() {
      return request.auth != null && request.auth.uid == resource.data.owner;
    }
    function userOwnsDocumentAndRequest() {
      return userOwnsDocument() && userOwnsRequest();
    }

    function hasName() {
      return request.resource.data.name is string;
    }
  }
}